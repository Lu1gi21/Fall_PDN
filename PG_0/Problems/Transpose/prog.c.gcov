        -:    0:Source:prog.c
        -:    0:Graph:prog.gcno
        -:    0:Data:prog.gcda
        -:    0:Runs:3
        -:    1:// transpose
        -:    2:
        -:    3:#include <stdio.h>
        -:    4:#include <stdlib.h>
        -:    5:
        -:    6:
        3:    7:int main(int argc, char *argv[]){
        -:    8:    // checks if arguments are complete
        3:    9:	if(argc < 3){
        2:   10:		printf("need more contents in command line");
        2:   11:		exit(0);
        -:   12:	}
        -:   13:	
        -:   14:    //opens files
        1:   15:	FILE *in_file = fopen(argv[1], "r");
        1:   16:	FILE *out_file = fopen(argv[2], "w");
        -:   17:
        -:   18:	
        -:   19:	// get size of array
        1:   20:	int row = getc(in_file) - '0';
        1:   21:    getc(in_file);
        1:   22:    int column = getc(in_file) - '0';
        -:   23:
        -:   24:    // finds size of 2Darray
        1:   25:	int size = row*column;
        1:   26:	float* nums = (float*)malloc(size* sizeof(float));
        -:   27:
        -:   28:    // fills 2D array
        -:   29:	char text[100];
        -:   30:    char* pend;
        1:   31:	fgets(text,100,in_file);
        4:   32:	for(int i = 0; i < row; i++){
        3:   33:		fgets(text,100,in_file);
        3:   34:        char* temp = &text[0];
       15:   35:		for(int j = 0; j < column; j++){
       12:   36:            nums[i * column + j] = strtof(temp, &pend);
       12:   37:            temp = pend;
       12:   38:            pend = 0;
        -:   39:            
        -:   40:        }
        -:   41:
        -:   42:	}
        1:   43:    fclose(in_file);
        -:   44:    // makes transposed outfile
        1:   45:    fprintf(out_file,"%i %i\n", column, row);
        5:   46:    for(int i = 0; i < column; i++){
       16:   47:        for(int j = 0; j <row; j++){
       12:   48:            fprintf(out_file, "%.0f ", nums[j * column + i]);
        -:   49:        }
        4:   50:        fprintf(out_file, "\n");
        -:   51:    }
        1:   52:    fclose(out_file);
        1:   53:    free(nums);
        -:   54:
        -:   55:
        -:   56:	
        -:   57:
        -:   58:
        -:   59:
        -:   60:}
